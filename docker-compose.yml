version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: analytical-lab-db
    environment:
      POSTGRES_DB: analytical_lab
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Application
  app:
    build: .
    container_name: analytical-lab-app
    ports:
      - "3000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://postgres:password123@db:5432/analytical_lab
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      ADMIN_EMAIL: admin@analyticallab.com
      ADMIN_PASSWORD: admin123
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/server/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  uploads_data:

networks:
  default:
    name: analytical-lab-network
